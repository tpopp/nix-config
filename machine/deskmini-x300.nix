# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/fdfa3c60-4bba-4897-b80d-b37740cdc869";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-7c3d58f3-fd1d-498d-a870-3ff4949bf44a".device = "/dev/disk/by-uuid/7c3d58f3-fd1d-498d-a870-3ff4949bf44a";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/997D-D9CE";
      fsType = "vfat";
    };

  fileSystems."/hdd" =
    { device = "/dev/disk/by-uuid/40ae650a-808c-42e2-8be2-ffc899761dda";
      fsType = "ext4";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/c06fac41-42fe-4cfb-a5c1-cfba5632038a"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;

  # Enable swap on luks
  boot.initrd.luks.devices."luks-d5183007-19ef-4d31-8e87-0eb94749ac04".device = "/dev/disk/by-uuid/d5183007-19ef-4d31-8e87-0eb94749ac04";
  boot.initrd.luks.devices."luks-d5183007-19ef-4d31-8e87-0eb94749ac04".keyFile = "/crypto_keyfile.bin";

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.efi.efiSysMountPoint = "/boot/efi";
  boot.kernelPackages = pkgs.linuxPackages_latest;

  # Setup keyfile
  boot.initrd.secrets = {
    "/crypto_keyfile.bin" = null;
  };
}
